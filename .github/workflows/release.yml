name: Bump version and release to PyPI

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        pip install setuptools wheel twine

    - name: Bump version (minor) and update dinnovation/version.py
      run: python bump_version.py

    - name: Verify version bump
      run: |
        cat dinnovation/version.py
        cat setup.py

    - name: Configure Git
      run: |
        git config --global user.name "cmblir"
        git config --global user.email "sodlalwl13@gmail.com"

    - name: Commit and push version bump
      run: |
        git add dinnovation/version.py
        git commit -m "Bump version"
        git push

    - name: Delete distribution directory if exists
      run: |
        if [ -d "dist" ]; then
          rm -rf dist/
        fi

    - name: Build and publish package
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*

    - name: Get commit message
      id: commit
      run: |
        echo "COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.event.after }})" >> $GITHUB_ENV

    - name: Get version number
      id: version
      run: |
        VERSION=$(python -c "from dinnovation import version; print(version.version)")
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ env.VERSION }}
        release_name: Release ${{ env.VERSION }}
        body: ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
